{"ast":null,"code":"/**\n * SEO Utilities for Local Producer Web Application\n * \n * Comprehensive SEO utilities for meta tags, structured data,\n * and Romanian language optimization.\n */\n\n// Romanian language SEO keywords and phrases\nexport const ROMANIAN_SEO_KEYWORDS = {\n  general: ['produse locale', 'producători români', 'mâncare tradițională', 'produse naturale', 'fermieri locali', 'alimente bio', 'produse casnice', 'mâncare sănătoasă'],\n  categories: {\n    'lactate': ['lapte proaspăt', 'brânză de țară', 'smântână', 'iaurt natural'],\n    'carne': ['carne de vită', 'carne de porc', 'pui de țară', 'carne bio'],\n    'legume': ['legume proaspete', 'legume de sezon', 'legume bio', 'salate'],\n    'fructe': ['fructe proaspete', 'fructe de sezon', 'mere', 'pere'],\n    'panificatie': ['pâine de casă', 'cozonac', 'prăjituri', 'produse de panificație'],\n    'conserve': ['murături', 'gem de casă', 'conserve naturale', 'dulceață']\n  }\n};\n\n// Base SEO configuration for the application\nexport const SEO_CONFIG = {\n  siteName: 'Pe Foc de Lemne - Produse Locale Românești',\n  baseUrl: process.env.REACT_APP_BASE_URL || 'https://pefocdelemne.ro',\n  defaultImage: '/images/og-default.jpg',\n  twitterHandle: '@pefocdelemne',\n  facebookPageId: 'pefocdelemne',\n  business: {\n    name: 'Pe Foc de Lemne',\n    description: 'Marketplace pentru produse locale românești de la producători verificați',\n    address: {\n      streetAddress: 'Strada Producătorilor nr. 1',\n      addressLocality: 'București',\n      addressRegion: 'București',\n      postalCode: '010101',\n      addressCountry: 'RO'\n    },\n    phone: '+40 700 000 000',\n    email: 'contact@pefocdelemne.ro',\n    priceRange: '$$'\n  }\n};\n\n/**\n * Generate SEO-friendly slug from Romanian text\n */\nexport const generateSlug = text => {\n  const romanianChars = {\n    'ă': 'a',\n    'â': 'a',\n    'î': 'i',\n    'ș': 's',\n    'ț': 't',\n    'Ă': 'A',\n    'Â': 'A',\n    'Î': 'I',\n    'Ș': 'S',\n    'Ț': 'T'\n  };\n  return text.toLowerCase().replace(/[ăâîșț]/g, char => romanianChars[char]).replace(/[^a-z0-9]+/g, '-').replace(/^-+|-+$/g, '').substring(0, 50);\n};\n\n/**\n * Generate meta tags for a page\n */\nexport const generateMetaTags = ({\n  title,\n  description,\n  keywords = [],\n  image,\n  url,\n  type = 'website',\n  product,\n  article\n}) => {\n  const fullTitle = title ? `${title} | ${SEO_CONFIG.siteName}` : SEO_CONFIG.siteName;\n  const fullUrl = url ? `${SEO_CONFIG.baseUrl}${url}` : SEO_CONFIG.baseUrl;\n  const fullImage = image ? `${SEO_CONFIG.baseUrl}${image}` : `${SEO_CONFIG.baseUrl}${SEO_CONFIG.defaultImage}`;\n\n  // Combine keywords with Romanian SEO keywords\n  const allKeywords = [...keywords, ...ROMANIAN_SEO_KEYWORDS.general].join(', ');\n  const metaTags = {\n    // Basic meta tags\n    title: fullTitle,\n    description: (description === null || description === void 0 ? void 0 : description.substring(0, 160)) || 'Produse locale românești de la producători verificați. Comandă online produse naturale, bio și tradiționale.',\n    keywords: allKeywords.substring(0, 255),\n    // Open Graph tags\n    'og:title': fullTitle,\n    'og:description': (description === null || description === void 0 ? void 0 : description.substring(0, 300)) || 'Descoperă produse locale românești autentice de la producători verificați. Mâncare sănătoasă, naturală și tradițională.',\n    'og:image': fullImage,\n    'og:url': fullUrl,\n    'og:type': type,\n    'og:site_name': SEO_CONFIG.siteName,\n    'og:locale': 'ro_RO',\n    // Twitter Card tags\n    'twitter:card': 'summary_large_image',\n    'twitter:title': fullTitle.substring(0, 70),\n    'twitter:description': (description === null || description === void 0 ? void 0 : description.substring(0, 200)) || 'Produse locale românești de la producători verificați',\n    'twitter:image': fullImage,\n    'twitter:site': SEO_CONFIG.twitterHandle,\n    'twitter:creator': SEO_CONFIG.twitterHandle,\n    // Additional meta tags\n    'robots': 'index, follow',\n    'language': 'Romanian',\n    'author': SEO_CONFIG.business.name,\n    'viewport': 'width=device-width, initial-scale=1.0',\n    'theme-color': '#059669',\n    'canonical': fullUrl\n  };\n\n  // Add product-specific meta tags\n  if (product) {\n    metaTags['og:type'] = 'product';\n    metaTags['product:price:amount'] = product.price;\n    metaTags['product:price:currency'] = 'RON';\n    metaTags['product:availability'] = product.inStock ? 'in stock' : 'out of stock';\n    metaTags['product:category'] = product.category;\n    metaTags['product:brand'] = product.producer || SEO_CONFIG.business.name;\n  }\n\n  // Add article-specific meta tags\n  if (article) {\n    var _article$tags;\n    metaTags['og:type'] = 'article';\n    metaTags['article:published_time'] = article.publishedTime;\n    metaTags['article:modified_time'] = article.modifiedTime;\n    metaTags['article:author'] = article.author || SEO_CONFIG.business.name;\n    metaTags['article:section'] = article.section;\n    metaTags['article:tag'] = (_article$tags = article.tags) === null || _article$tags === void 0 ? void 0 : _article$tags.join(', ');\n  }\n  return metaTags;\n};\n\n/**\n * Generate JSON-LD structured data\n */\nexport const generateStructuredData = (type, data) => {\n  var _data$images, _data$reviews, _data$breadcrumbs;\n  const baseContext = {\n    '@context': 'https://schema.org',\n    '@type': type\n  };\n  switch (type) {\n    case 'LocalBusiness':\n      return {\n        ...baseContext,\n        name: SEO_CONFIG.business.name,\n        description: SEO_CONFIG.business.description,\n        url: SEO_CONFIG.baseUrl,\n        telephone: SEO_CONFIG.business.phone,\n        email: SEO_CONFIG.business.email,\n        priceRange: SEO_CONFIG.business.priceRange,\n        address: {\n          '@type': 'PostalAddress',\n          ...SEO_CONFIG.business.address\n        },\n        geo: {\n          '@type': 'GeoCoordinates',\n          latitude: (data === null || data === void 0 ? void 0 : data.latitude) || 44.4268,\n          longitude: (data === null || data === void 0 ? void 0 : data.longitude) || 26.1025\n        },\n        openingHours: (data === null || data === void 0 ? void 0 : data.openingHours) || ['Mo-Su 08:00-20:00'],\n        paymentAccepted: ['Cash', 'Credit Card', 'Bank Transfer'],\n        currenciesAccepted: 'RON',\n        areaServed: {\n          '@type': 'Country',\n          name: 'Romania'\n        },\n        serviceType: 'Online Marketplace',\n        logo: `${SEO_CONFIG.baseUrl}/images/logo.png`,\n        image: `${SEO_CONFIG.baseUrl}/images/business-photo.jpg`,\n        sameAs: [`https://www.facebook.com/${SEO_CONFIG.facebookPageId}`, `https://twitter.com/${SEO_CONFIG.twitterHandle.substring(1)}`]\n      };\n    case 'Product':\n      return {\n        ...baseContext,\n        name: data.name,\n        description: data.description,\n        image: ((_data$images = data.images) === null || _data$images === void 0 ? void 0 : _data$images.map(img => `${SEO_CONFIG.baseUrl}${img}`)) || [],\n        brand: {\n          '@type': 'Brand',\n          name: data.producer || SEO_CONFIG.business.name\n        },\n        manufacturer: {\n          '@type': 'Organization',\n          name: data.producer || SEO_CONFIG.business.name\n        },\n        offers: {\n          '@type': 'Offer',\n          price: data.price,\n          priceCurrency: 'RON',\n          availability: data.inStock ? 'https://schema.org/InStock' : 'https://schema.org/OutOfStock',\n          seller: {\n            '@type': 'Organization',\n            name: SEO_CONFIG.business.name\n          },\n          priceValidUntil: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n          shippingDetails: {\n            '@type': 'OfferShippingDetails',\n            shippingRate: {\n              '@type': 'MonetaryAmount',\n              value: '0',\n              currency: 'RON'\n            },\n            deliveryTime: {\n              '@type': 'ShippingDeliveryTime',\n              minValue: 1,\n              maxValue: 3,\n              unitCode: 'DAY'\n            }\n          }\n        },\n        category: data.category,\n        weight: data.weight ? {\n          '@type': 'QuantitativeValue',\n          value: data.weight,\n          unitCode: 'GRM'\n        } : undefined,\n        aggregateRating: data.rating ? {\n          '@type': 'AggregateRating',\n          ratingValue: data.rating.average,\n          reviewCount: data.rating.count,\n          bestRating: 5,\n          worstRating: 1\n        } : undefined,\n        review: ((_data$reviews = data.reviews) === null || _data$reviews === void 0 ? void 0 : _data$reviews.map(review => ({\n          '@type': 'Review',\n          author: {\n            '@type': 'Person',\n            name: review.author\n          },\n          reviewRating: {\n            '@type': 'Rating',\n            ratingValue: review.rating,\n            bestRating: 5,\n            worstRating: 1\n          },\n          reviewBody: review.text,\n          datePublished: review.date\n        }))) || []\n      };\n    case 'WebSite':\n      return {\n        ...baseContext,\n        name: SEO_CONFIG.siteName,\n        url: SEO_CONFIG.baseUrl,\n        description: SEO_CONFIG.business.description,\n        inLanguage: 'ro-RO',\n        publisher: {\n          '@type': 'Organization',\n          name: SEO_CONFIG.business.name,\n          logo: {\n            '@type': 'ImageObject',\n            url: `${SEO_CONFIG.baseUrl}/images/logo.png`\n          }\n        },\n        potentialAction: {\n          '@type': 'SearchAction',\n          target: `${SEO_CONFIG.baseUrl}/produse?q={search_term_string}`,\n          'query-input': 'required name=search_term_string'\n        }\n      };\n    case 'BreadcrumbList':\n      return {\n        ...baseContext,\n        itemListElement: ((_data$breadcrumbs = data.breadcrumbs) === null || _data$breadcrumbs === void 0 ? void 0 : _data$breadcrumbs.map((item, index) => ({\n          '@type': 'ListItem',\n          position: index + 1,\n          name: item.name,\n          item: `${SEO_CONFIG.baseUrl}${item.url}`\n        }))) || []\n      };\n    case 'Organization':\n      return {\n        ...baseContext,\n        name: SEO_CONFIG.business.name,\n        url: SEO_CONFIG.baseUrl,\n        logo: `${SEO_CONFIG.baseUrl}/images/logo.png`,\n        description: SEO_CONFIG.business.description,\n        address: {\n          '@type': 'PostalAddress',\n          ...SEO_CONFIG.business.address\n        },\n        contactPoint: {\n          '@type': 'ContactPoint',\n          telephone: SEO_CONFIG.business.phone,\n          contactType: 'Customer Service',\n          areaServed: 'RO',\n          availableLanguage: 'Romanian'\n        },\n        sameAs: [`https://www.facebook.com/${SEO_CONFIG.facebookPageId}`, `https://twitter.com/${SEO_CONFIG.twitterHandle.substring(1)}`]\n      };\n    default:\n      return baseContext;\n  }\n};\n\n/**\n * Generate XML sitemap data\n */\nexport const generateSitemapData = (pages = []) => {\n  const staticPages = [{\n    url: '/',\n    priority: 1.0,\n    changefreq: 'daily'\n  }, {\n    url: '/produse',\n    priority: 0.9,\n    changefreq: 'daily'\n  }, {\n    url: '/cos',\n    priority: 0.7,\n    changefreq: 'weekly'\n  }, {\n    url: '/comanda',\n    priority: 0.8,\n    changefreq: 'monthly'\n  }, {\n    url: '/despre',\n    priority: 0.6,\n    changefreq: 'monthly'\n  }, {\n    url: '/contact',\n    priority: 0.6,\n    changefreq: 'monthly'\n  }, {\n    url: '/termeni',\n    priority: 0.3,\n    changefreq: 'yearly'\n  }, {\n    url: '/confidentialitate',\n    priority: 0.3,\n    changefreq: 'yearly'\n  }];\n  const allPages = [...staticPages, ...pages];\n  return allPages.map(page => ({\n    loc: `${SEO_CONFIG.baseUrl}${page.url}`,\n    lastmod: page.lastmod || new Date().toISOString().split('T')[0],\n    changefreq: page.changefreq || 'weekly',\n    priority: page.priority || 0.5\n  }));\n};\n\n/**\n * Validate and optimize meta description\n */\nexport const optimizeMetaDescription = (description, maxLength = 160) => {\n  if (!description) return '';\n\n  // Remove HTML tags\n  const cleanDescription = description.replace(/<[^>]*>/g, '');\n\n  // Truncate if too long and add ellipsis\n  if (cleanDescription.length > maxLength) {\n    return cleanDescription.substring(0, maxLength - 3).trim() + '...';\n  }\n  return cleanDescription;\n};\n\n/**\n * Generate Romanian language keywords for a category\n */\nexport const getCategoryKeywords = categorySlug => {\n  return ROMANIAN_SEO_KEYWORDS.categories[categorySlug] || ROMANIAN_SEO_KEYWORDS.general;\n};\n\n/**\n * Create SEO-friendly alt text for images\n */\nexport const generateAltText = (productName, category, type = 'product') => {\n  switch (type) {\n    case 'product':\n      return `${productName} - produs local românesc ${category} de calitate`;\n    case 'category':\n      return `Categoria ${category} - produse locale românești`;\n    case 'hero':\n      return `Pe Foc de Lemne - marketplace pentru produse locale românești`;\n    case 'logo':\n      return `Pe Foc de Lemne - logo marketplace produse locale`;\n    default:\n      return `${productName} - produs local românesc`;\n  }\n};\n\n/**\n * Check if URL is canonical\n */\nexport const isCanonicalUrl = url => {\n  // Remove trailing slashes and query parameters for canonical check\n  const cleanUrl = url.replace(/\\/$/, '').split('?')[0];\n  return cleanUrl;\n};\n\n/**\n * Generate hreflang tags for multi-language support\n */\nexport const generateHreflangTags = currentPath => {\n  return [{\n    hreflang: 'ro',\n    href: `${SEO_CONFIG.baseUrl}${currentPath}`\n  }, {\n    hreflang: 'x-default',\n    href: `${SEO_CONFIG.baseUrl}${currentPath}`\n  }];\n};\n\n/**\n * Create robots meta tag based on page type\n */\nexport const generateRobotsTag = (pageType, isPublished = true) => {\n  if (!isPublished) return 'noindex, nofollow';\n  switch (pageType) {\n    case 'admin':\n    case 'checkout':\n    case 'order-confirmation':\n      return 'noindex, nofollow';\n    case 'product':\n    case 'category':\n    case 'home':\n      return 'index, follow';\n    case 'search':\n      return 'noindex, follow';\n    default:\n      return 'index, follow';\n  }\n};\nexport default {\n  generateMetaTags,\n  generateStructuredData,\n  generateSitemapData,\n  generateSlug,\n  optimizeMetaDescription,\n  getCategoryKeywords,\n  generateAltText,\n  isCanonicalUrl,\n  generateHreflangTags,\n  generateRobotsTag,\n  SEO_CONFIG,\n  ROMANIAN_SEO_KEYWORDS\n};","map":{"version":3,"names":["ROMANIAN_SEO_KEYWORDS","general","categories","SEO_CONFIG","siteName","baseUrl","process","env","REACT_APP_BASE_URL","defaultImage","twitterHandle","facebookPageId","business","name","description","address","streetAddress","addressLocality","addressRegion","postalCode","addressCountry","phone","email","priceRange","generateSlug","text","romanianChars","toLowerCase","replace","char","substring","generateMetaTags","title","keywords","image","url","type","product","article","fullTitle","fullUrl","fullImage","allKeywords","join","metaTags","price","inStock","category","producer","_article$tags","publishedTime","modifiedTime","author","section","tags","generateStructuredData","data","_data$images","_data$reviews","_data$breadcrumbs","baseContext","telephone","geo","latitude","longitude","openingHours","paymentAccepted","currenciesAccepted","areaServed","serviceType","logo","sameAs","images","map","img","brand","manufacturer","offers","priceCurrency","availability","seller","priceValidUntil","Date","now","toISOString","split","shippingDetails","shippingRate","value","currency","deliveryTime","minValue","maxValue","unitCode","weight","undefined","aggregateRating","rating","ratingValue","average","reviewCount","count","bestRating","worstRating","review","reviews","reviewRating","reviewBody","datePublished","date","inLanguage","publisher","potentialAction","target","itemListElement","breadcrumbs","item","index","position","contactPoint","contactType","availableLanguage","generateSitemapData","pages","staticPages","priority","changefreq","allPages","page","loc","lastmod","optimizeMetaDescription","maxLength","cleanDescription","length","trim","getCategoryKeywords","categorySlug","generateAltText","productName","isCanonicalUrl","cleanUrl","generateHreflangTags","currentPath","hreflang","href","generateRobotsTag","pageType","isPublished"],"sources":["/Users/claudiu/Desktop/pe foc de lemne/frontend/src/utils/seo.js"],"sourcesContent":["/**\n * SEO Utilities for Local Producer Web Application\n * \n * Comprehensive SEO utilities for meta tags, structured data,\n * and Romanian language optimization.\n */\n\n// Romanian language SEO keywords and phrases\nexport const ROMANIAN_SEO_KEYWORDS = {\n  general: [\n    'produse locale',\n    'producători români',\n    'mâncare tradițională',\n    'produse naturale',\n    'fermieri locali',\n    'alimente bio',\n    'produse casnice',\n    'mâncare sănătoasă'\n  ],\n  categories: {\n    'lactate': ['lapte proaspăt', 'brânză de țară', 'smântână', 'iaurt natural'],\n    'carne': ['carne de vită', 'carne de porc', 'pui de țară', 'carne bio'],\n    'legume': ['legume proaspete', 'legume de sezon', 'legume bio', 'salate'],\n    'fructe': ['fructe proaspete', 'fructe de sezon', 'mere', 'pere'],\n    'panificatie': ['pâine de casă', 'cozonac', 'prăjituri', 'produse de panificație'],\n    'conserve': ['murături', 'gem de casă', 'conserve naturale', 'dulceață']\n  }\n};\n\n// Base SEO configuration for the application\nexport const SEO_CONFIG = {\n  siteName: 'Pe Foc de Lemne - Produse Locale Românești',\n  baseUrl: process.env.REACT_APP_BASE_URL || 'https://pefocdelemne.ro',\n  defaultImage: '/images/og-default.jpg',\n  twitterHandle: '@pefocdelemne',\n  facebookPageId: 'pefocdelemne',\n  business: {\n    name: 'Pe Foc de Lemne',\n    description: 'Marketplace pentru produse locale românești de la producători verificați',\n    address: {\n      streetAddress: 'Strada Producătorilor nr. 1',\n      addressLocality: 'București',\n      addressRegion: 'București',\n      postalCode: '010101',\n      addressCountry: 'RO'\n    },\n    phone: '+40 700 000 000',\n    email: 'contact@pefocdelemne.ro',\n    priceRange: '$$'\n  }\n};\n\n/**\n * Generate SEO-friendly slug from Romanian text\n */\nexport const generateSlug = (text) => {\n  const romanianChars = {\n    'ă': 'a', 'â': 'a', 'î': 'i', 'ș': 's', 'ț': 't',\n    'Ă': 'A', 'Â': 'A', 'Î': 'I', 'Ș': 'S', 'Ț': 'T'\n  };\n  \n  return text\n    .toLowerCase()\n    .replace(/[ăâîșț]/g, char => romanianChars[char])\n    .replace(/[^a-z0-9]+/g, '-')\n    .replace(/^-+|-+$/g, '')\n    .substring(0, 50);\n};\n\n/**\n * Generate meta tags for a page\n */\nexport const generateMetaTags = ({\n  title,\n  description,\n  keywords = [],\n  image,\n  url,\n  type = 'website',\n  product,\n  article\n}) => {\n  const fullTitle = title ? `${title} | ${SEO_CONFIG.siteName}` : SEO_CONFIG.siteName;\n  const fullUrl = url ? `${SEO_CONFIG.baseUrl}${url}` : SEO_CONFIG.baseUrl;\n  const fullImage = image ? `${SEO_CONFIG.baseUrl}${image}` : `${SEO_CONFIG.baseUrl}${SEO_CONFIG.defaultImage}`;\n  \n  // Combine keywords with Romanian SEO keywords\n  const allKeywords = [\n    ...keywords,\n    ...ROMANIAN_SEO_KEYWORDS.general\n  ].join(', ');\n\n  const metaTags = {\n    // Basic meta tags\n    title: fullTitle,\n    description: description?.substring(0, 160) || 'Produse locale românești de la producători verificați. Comandă online produse naturale, bio și tradiționale.',\n    keywords: allKeywords.substring(0, 255),\n    \n    // Open Graph tags\n    'og:title': fullTitle,\n    'og:description': description?.substring(0, 300) || 'Descoperă produse locale românești autentice de la producători verificați. Mâncare sănătoasă, naturală și tradițională.',\n    'og:image': fullImage,\n    'og:url': fullUrl,\n    'og:type': type,\n    'og:site_name': SEO_CONFIG.siteName,\n    'og:locale': 'ro_RO',\n    \n    // Twitter Card tags\n    'twitter:card': 'summary_large_image',\n    'twitter:title': fullTitle.substring(0, 70),\n    'twitter:description': description?.substring(0, 200) || 'Produse locale românești de la producători verificați',\n    'twitter:image': fullImage,\n    'twitter:site': SEO_CONFIG.twitterHandle,\n    'twitter:creator': SEO_CONFIG.twitterHandle,\n    \n    // Additional meta tags\n    'robots': 'index, follow',\n    'language': 'Romanian',\n    'author': SEO_CONFIG.business.name,\n    'viewport': 'width=device-width, initial-scale=1.0',\n    'theme-color': '#059669',\n    'canonical': fullUrl\n  };\n\n  // Add product-specific meta tags\n  if (product) {\n    metaTags['og:type'] = 'product';\n    metaTags['product:price:amount'] = product.price;\n    metaTags['product:price:currency'] = 'RON';\n    metaTags['product:availability'] = product.inStock ? 'in stock' : 'out of stock';\n    metaTags['product:category'] = product.category;\n    metaTags['product:brand'] = product.producer || SEO_CONFIG.business.name;\n  }\n\n  // Add article-specific meta tags\n  if (article) {\n    metaTags['og:type'] = 'article';\n    metaTags['article:published_time'] = article.publishedTime;\n    metaTags['article:modified_time'] = article.modifiedTime;\n    metaTags['article:author'] = article.author || SEO_CONFIG.business.name;\n    metaTags['article:section'] = article.section;\n    metaTags['article:tag'] = article.tags?.join(', ');\n  }\n\n  return metaTags;\n};\n\n/**\n * Generate JSON-LD structured data\n */\nexport const generateStructuredData = (type, data) => {\n  const baseContext = {\n    '@context': 'https://schema.org',\n    '@type': type\n  };\n\n  switch (type) {\n    case 'LocalBusiness':\n      return {\n        ...baseContext,\n        name: SEO_CONFIG.business.name,\n        description: SEO_CONFIG.business.description,\n        url: SEO_CONFIG.baseUrl,\n        telephone: SEO_CONFIG.business.phone,\n        email: SEO_CONFIG.business.email,\n        priceRange: SEO_CONFIG.business.priceRange,\n        address: {\n          '@type': 'PostalAddress',\n          ...SEO_CONFIG.business.address\n        },\n        geo: {\n          '@type': 'GeoCoordinates',\n          latitude: data?.latitude || 44.4268,\n          longitude: data?.longitude || 26.1025\n        },\n        openingHours: data?.openingHours || ['Mo-Su 08:00-20:00'],\n        paymentAccepted: ['Cash', 'Credit Card', 'Bank Transfer'],\n        currenciesAccepted: 'RON',\n        areaServed: {\n          '@type': 'Country',\n          name: 'Romania'\n        },\n        serviceType: 'Online Marketplace',\n        logo: `${SEO_CONFIG.baseUrl}/images/logo.png`,\n        image: `${SEO_CONFIG.baseUrl}/images/business-photo.jpg`,\n        sameAs: [\n          `https://www.facebook.com/${SEO_CONFIG.facebookPageId}`,\n          `https://twitter.com/${SEO_CONFIG.twitterHandle.substring(1)}`\n        ]\n      };\n\n    case 'Product':\n      return {\n        ...baseContext,\n        name: data.name,\n        description: data.description,\n        image: data.images?.map(img => `${SEO_CONFIG.baseUrl}${img}`) || [],\n        brand: {\n          '@type': 'Brand',\n          name: data.producer || SEO_CONFIG.business.name\n        },\n        manufacturer: {\n          '@type': 'Organization',\n          name: data.producer || SEO_CONFIG.business.name\n        },\n        offers: {\n          '@type': 'Offer',\n          price: data.price,\n          priceCurrency: 'RON',\n          availability: data.inStock \n            ? 'https://schema.org/InStock' \n            : 'https://schema.org/OutOfStock',\n          seller: {\n            '@type': 'Organization',\n            name: SEO_CONFIG.business.name\n          },\n          priceValidUntil: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n          shippingDetails: {\n            '@type': 'OfferShippingDetails',\n            shippingRate: {\n              '@type': 'MonetaryAmount',\n              value: '0',\n              currency: 'RON'\n            },\n            deliveryTime: {\n              '@type': 'ShippingDeliveryTime',\n              minValue: 1,\n              maxValue: 3,\n              unitCode: 'DAY'\n            }\n          }\n        },\n        category: data.category,\n        weight: data.weight ? {\n          '@type': 'QuantitativeValue',\n          value: data.weight,\n          unitCode: 'GRM'\n        } : undefined,\n        aggregateRating: data.rating ? {\n          '@type': 'AggregateRating',\n          ratingValue: data.rating.average,\n          reviewCount: data.rating.count,\n          bestRating: 5,\n          worstRating: 1\n        } : undefined,\n        review: data.reviews?.map(review => ({\n          '@type': 'Review',\n          author: {\n            '@type': 'Person',\n            name: review.author\n          },\n          reviewRating: {\n            '@type': 'Rating',\n            ratingValue: review.rating,\n            bestRating: 5,\n            worstRating: 1\n          },\n          reviewBody: review.text,\n          datePublished: review.date\n        })) || []\n      };\n\n    case 'WebSite':\n      return {\n        ...baseContext,\n        name: SEO_CONFIG.siteName,\n        url: SEO_CONFIG.baseUrl,\n        description: SEO_CONFIG.business.description,\n        inLanguage: 'ro-RO',\n        publisher: {\n          '@type': 'Organization',\n          name: SEO_CONFIG.business.name,\n          logo: {\n            '@type': 'ImageObject',\n            url: `${SEO_CONFIG.baseUrl}/images/logo.png`\n          }\n        },\n        potentialAction: {\n          '@type': 'SearchAction',\n          target: `${SEO_CONFIG.baseUrl}/produse?q={search_term_string}`,\n          'query-input': 'required name=search_term_string'\n        }\n      };\n\n    case 'BreadcrumbList':\n      return {\n        ...baseContext,\n        itemListElement: data.breadcrumbs?.map((item, index) => ({\n          '@type': 'ListItem',\n          position: index + 1,\n          name: item.name,\n          item: `${SEO_CONFIG.baseUrl}${item.url}`\n        })) || []\n      };\n\n    case 'Organization':\n      return {\n        ...baseContext,\n        name: SEO_CONFIG.business.name,\n        url: SEO_CONFIG.baseUrl,\n        logo: `${SEO_CONFIG.baseUrl}/images/logo.png`,\n        description: SEO_CONFIG.business.description,\n        address: {\n          '@type': 'PostalAddress',\n          ...SEO_CONFIG.business.address\n        },\n        contactPoint: {\n          '@type': 'ContactPoint',\n          telephone: SEO_CONFIG.business.phone,\n          contactType: 'Customer Service',\n          areaServed: 'RO',\n          availableLanguage: 'Romanian'\n        },\n        sameAs: [\n          `https://www.facebook.com/${SEO_CONFIG.facebookPageId}`,\n          `https://twitter.com/${SEO_CONFIG.twitterHandle.substring(1)}`\n        ]\n      };\n\n    default:\n      return baseContext;\n  }\n};\n\n/**\n * Generate XML sitemap data\n */\nexport const generateSitemapData = (pages = []) => {\n  const staticPages = [\n    { url: '/', priority: 1.0, changefreq: 'daily' },\n    { url: '/produse', priority: 0.9, changefreq: 'daily' },\n    { url: '/cos', priority: 0.7, changefreq: 'weekly' },\n    { url: '/comanda', priority: 0.8, changefreq: 'monthly' },\n    { url: '/despre', priority: 0.6, changefreq: 'monthly' },\n    { url: '/contact', priority: 0.6, changefreq: 'monthly' },\n    { url: '/termeni', priority: 0.3, changefreq: 'yearly' },\n    { url: '/confidentialitate', priority: 0.3, changefreq: 'yearly' }\n  ];\n\n  const allPages = [...staticPages, ...pages];\n  \n  return allPages.map(page => ({\n    loc: `${SEO_CONFIG.baseUrl}${page.url}`,\n    lastmod: page.lastmod || new Date().toISOString().split('T')[0],\n    changefreq: page.changefreq || 'weekly',\n    priority: page.priority || 0.5\n  }));\n};\n\n/**\n * Validate and optimize meta description\n */\nexport const optimizeMetaDescription = (description, maxLength = 160) => {\n  if (!description) return '';\n  \n  // Remove HTML tags\n  const cleanDescription = description.replace(/<[^>]*>/g, '');\n  \n  // Truncate if too long and add ellipsis\n  if (cleanDescription.length > maxLength) {\n    return cleanDescription.substring(0, maxLength - 3).trim() + '...';\n  }\n  \n  return cleanDescription;\n};\n\n/**\n * Generate Romanian language keywords for a category\n */\nexport const getCategoryKeywords = (categorySlug) => {\n  return ROMANIAN_SEO_KEYWORDS.categories[categorySlug] || ROMANIAN_SEO_KEYWORDS.general;\n};\n\n/**\n * Create SEO-friendly alt text for images\n */\nexport const generateAltText = (productName, category, type = 'product') => {\n  switch (type) {\n    case 'product':\n      return `${productName} - produs local românesc ${category} de calitate`;\n    case 'category':\n      return `Categoria ${category} - produse locale românești`;\n    case 'hero':\n      return `Pe Foc de Lemne - marketplace pentru produse locale românești`;\n    case 'logo':\n      return `Pe Foc de Lemne - logo marketplace produse locale`;\n    default:\n      return `${productName} - produs local românesc`;\n  }\n};\n\n/**\n * Check if URL is canonical\n */\nexport const isCanonicalUrl = (url) => {\n  // Remove trailing slashes and query parameters for canonical check\n  const cleanUrl = url.replace(/\\/$/, '').split('?')[0];\n  return cleanUrl;\n};\n\n/**\n * Generate hreflang tags for multi-language support\n */\nexport const generateHreflangTags = (currentPath) => {\n  return [\n    {\n      hreflang: 'ro',\n      href: `${SEO_CONFIG.baseUrl}${currentPath}`\n    },\n    {\n      hreflang: 'x-default',\n      href: `${SEO_CONFIG.baseUrl}${currentPath}`\n    }\n  ];\n};\n\n/**\n * Create robots meta tag based on page type\n */\nexport const generateRobotsTag = (pageType, isPublished = true) => {\n  if (!isPublished) return 'noindex, nofollow';\n  \n  switch (pageType) {\n    case 'admin':\n    case 'checkout':\n    case 'order-confirmation':\n      return 'noindex, nofollow';\n    case 'product':\n    case 'category':\n    case 'home':\n      return 'index, follow';\n    case 'search':\n      return 'noindex, follow';\n    default:\n      return 'index, follow';\n  }\n};\n\nexport default {\n  generateMetaTags,\n  generateStructuredData,\n  generateSitemapData,\n  generateSlug,\n  optimizeMetaDescription,\n  getCategoryKeywords,\n  generateAltText,\n  isCanonicalUrl,\n  generateHreflangTags,\n  generateRobotsTag,\n  SEO_CONFIG,\n  ROMANIAN_SEO_KEYWORDS\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}