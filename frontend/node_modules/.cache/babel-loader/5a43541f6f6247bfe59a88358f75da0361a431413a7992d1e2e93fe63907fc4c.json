{"ast":null,"code":"import _objectSpread from\"/Users/claudiu/Desktop/pe foc de lemne/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState,useEffect,useCallback}from'react';import toast from'react-hot-toast';export const useCart=()=>{const[cartItems,setCartItems]=useState([]);const[cartItemCount,setCartItemCount]=useState(0);const[cartTotal,setCartTotal]=useState(0);const[cartSubtotal,setCartSubtotal]=useState(0);const[cartTax,setCartTax]=useState(0);const[isLoading,setIsLoading]=useState(false);const[cartId,setCartId]=useState(null);// Generate or retrieve cart session ID\nuseEffect(()=>{let sessionCartId=localStorage.getItem('cartId');if(!sessionCartId){sessionCartId=\"cart_\".concat(Date.now(),\"_\").concat(Math.random().toString(36).substr(2,9));localStorage.setItem('cartId',sessionCartId);}setCartId(sessionCartId);},[]);// Load cart from localStorage on mount\nuseEffect(()=>{const savedCart=localStorage.getItem('cart');if(savedCart){try{const items=JSON.parse(savedCart);if(Array.isArray(items)){setCartItems(items);}}catch(error){console.error('Error loading cart from localStorage:',error);setCartItems([]);localStorage.removeItem('cart');}}},[]);// Update counts and totals when cart items change\nuseEffect(()=>{const itemCount=cartItems.reduce((sum,item)=>sum+(item.quantity||0),0);const subtotal=cartItems.reduce((sum,item)=>{const price=parseFloat(item.price)||0;const quantity=parseInt(item.quantity)||0;return sum+price*quantity;},0);// Calculate tax (19% VAT for Romania)\nconst tax=subtotal*0.19;const total=subtotal+tax;setCartItemCount(itemCount);setCartSubtotal(subtotal);setCartTax(tax);setCartTotal(total);// Save to localStorage with error handling\ntry{localStorage.setItem('cart',JSON.stringify(cartItems));}catch(error){console.error('Error saving cart to localStorage:',error);toast.error('Eroare la salvarea coșului');}},[cartItems]);// Format price for display\nconst formatPrice=useCallback(price=>{return new Intl.NumberFormat('ro-RO',{style:'currency',currency:'RON'}).format(price);},[]);// Add item to cart\nconst addToCart=useCallback(function(product){let quantity=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;if(!product||!product.id){toast.error('Produs invalid');return;}if(!product.inStock){toast.error('Produsul nu este în stoc');return;}if(quantity<=0){toast.error('Cantitatea trebuie să fie pozitivă');return;}setIsLoading(true);try{setCartItems(prevItems=>{const existingItem=prevItems.find(item=>item.id===product.id);if(existingItem){const newQuantity=existingItem.quantity+quantity;toast.success(\"\".concat(product.name,\" - cantitate actualizat\\u0103 la \").concat(newQuantity));return prevItems.map(item=>item.id===product.id?_objectSpread(_objectSpread({},item),{},{quantity:newQuantity}):item);}else{toast.success(\"\".concat(product.name,\" ad\\u0103ugat \\xEEn co\\u0219\"));return[...prevItems,_objectSpread(_objectSpread({},product),{},{quantity,addedAt:new Date().toISOString()})];}});}catch(error){console.error('Error adding to cart:',error);toast.error('Eroare la adăugarea în coș');}finally{setIsLoading(false);}},[]);// Remove item from cart\nconst removeFromCart=useCallback(productId=>{if(!productId)return;setCartItems(prevItems=>{const item=prevItems.find(item=>item.id===productId);if(item){toast.success(\"\".concat(item.name,\" eliminat din co\\u0219\"));}return prevItems.filter(item=>item.id!==productId);});},[]);// Update item quantity\nconst updateQuantity=useCallback((productId,quantity)=>{if(!productId)return;if(quantity<=0){removeFromCart(productId);return;}setCartItems(prevItems=>{const item=prevItems.find(item=>item.id===productId);if(item){toast.success(\"\".concat(item.name,\" - cantitate actualizat\\u0103\"));}return prevItems.map(item=>item.id===productId?_objectSpread(_objectSpread({},item),{},{quantity:parseInt(quantity)}):item);});},[removeFromCart]);// Increment item quantity\nconst incrementQuantity=useCallback(productId=>{setCartItems(prevItems=>prevItems.map(item=>item.id===productId?_objectSpread(_objectSpread({},item),{},{quantity:item.quantity+1}):item));},[]);// Decrement item quantity\nconst decrementQuantity=useCallback(productId=>{setCartItems(prevItems=>prevItems.map(item=>{if(item.id===productId){const newQuantity=item.quantity-1;return newQuantity>0?_objectSpread(_objectSpread({},item),{},{quantity:newQuantity}):null;}return item;}).filter(Boolean));},[]);// Clear entire cart\nconst clearCart=useCallback(()=>{setCartItems([]);toast.success('Coșul a fost golit');},[]);// Get cart item by product ID\nconst getCartItem=useCallback(productId=>{return cartItems.find(item=>item.id===productId);},[cartItems]);// Check if product is in cart\nconst isInCart=useCallback(productId=>{return cartItems.some(item=>item.id===productId);},[cartItems]);// Get cart summary for checkout\nconst getCartSummary=useCallback(()=>{return{items:cartItems,itemCount:cartItemCount,subtotal:cartSubtotal,tax:cartTax,total:cartTotal,cartId:cartId,formattedSubtotal:formatPrice(cartSubtotal),formattedTax:formatPrice(cartTax),formattedTotal:formatPrice(cartTotal)};},[cartItems,cartItemCount,cartSubtotal,cartTax,cartTotal,cartId,formatPrice]);// Validate cart items (check stock, prices, etc.)\nconst validateCart=useCallback(async()=>{// This would typically make an API call to validate items\n// For now, we'll do basic validation\nconst invalidItems=cartItems.filter(item=>!item.id||!item.name||!item.price||item.quantity<=0);if(invalidItems.length>0){console.warn('Invalid cart items found:',invalidItems);// Remove invalid items\nsetCartItems(prevItems=>prevItems.filter(item=>item.id&&item.name&&item.price&&item.quantity>0));toast.error('Unele produse din coș au fost eliminate (produse invalide)');}return invalidItems.length===0;},[cartItems]);return{// State\ncartItems,cartItemCount,cartTotal,cartSubtotal,cartTax,isLoading,cartId,// Actions\naddToCart,removeFromCart,updateQuantity,incrementQuantity,decrementQuantity,clearCart,// Utilities\ngetCartItem,isInCart,getCartSummary,validateCart,formatPrice};};","map":{"version":3,"names":["useState","useEffect","useCallback","toast","useCart","cartItems","setCartItems","cartItemCount","setCartItemCount","cartTotal","setCartTotal","cartSubtotal","setCartSubtotal","cartTax","setCartTax","isLoading","setIsLoading","cartId","setCartId","sessionCartId","localStorage","getItem","concat","Date","now","Math","random","toString","substr","setItem","savedCart","items","JSON","parse","Array","isArray","error","console","removeItem","itemCount","reduce","sum","item","quantity","subtotal","price","parseFloat","parseInt","tax","total","stringify","formatPrice","Intl","NumberFormat","style","currency","format","addToCart","product","arguments","length","undefined","id","inStock","prevItems","existingItem","find","newQuantity","success","name","map","_objectSpread","addedAt","toISOString","removeFromCart","productId","filter","updateQuantity","incrementQuantity","decrementQuantity","Boolean","clearCart","getCartItem","isInCart","some","getCartSummary","formattedSubtotal","formattedTax","formattedTotal","validateCart","invalidItems","warn"],"sources":["/Users/claudiu/Desktop/pe foc de lemne/frontend/src/hooks/useCart.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport toast from 'react-hot-toast';\n\nexport const useCart = () => {\n  const [cartItems, setCartItems] = useState([]);\n  const [cartItemCount, setCartItemCount] = useState(0);\n  const [cartTotal, setCartTotal] = useState(0);\n  const [cartSubtotal, setCartSubtotal] = useState(0);\n  const [cartTax, setCartTax] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [cartId, setCartId] = useState(null);\n  \n  // Generate or retrieve cart session ID\n  useEffect(() => {\n    let sessionCartId = localStorage.getItem('cartId');\n    if (!sessionCartId) {\n      sessionCartId = `cart_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      localStorage.setItem('cartId', sessionCartId);\n    }\n    setCartId(sessionCartId);\n  }, []);\n  \n  // Load cart from localStorage on mount\n  useEffect(() => {\n    const savedCart = localStorage.getItem('cart');\n    if (savedCart) {\n      try {\n        const items = JSON.parse(savedCart);\n        if (Array.isArray(items)) {\n          setCartItems(items);\n        }\n      } catch (error) {\n        console.error('Error loading cart from localStorage:', error);\n        setCartItems([]);\n        localStorage.removeItem('cart');\n      }\n    }\n  }, []);\n  \n  // Update counts and totals when cart items change\n  useEffect(() => {\n    const itemCount = cartItems.reduce((sum, item) => sum + (item.quantity || 0), 0);\n    const subtotal = cartItems.reduce((sum, item) => {\n      const price = parseFloat(item.price) || 0;\n      const quantity = parseInt(item.quantity) || 0;\n      return sum + (price * quantity);\n    }, 0);\n    \n    // Calculate tax (19% VAT for Romania)\n    const tax = subtotal * 0.19;\n    const total = subtotal + tax;\n    \n    setCartItemCount(itemCount);\n    setCartSubtotal(subtotal);\n    setCartTax(tax);\n    setCartTotal(total);\n    \n    // Save to localStorage with error handling\n    try {\n      localStorage.setItem('cart', JSON.stringify(cartItems));\n    } catch (error) {\n      console.error('Error saving cart to localStorage:', error);\n      toast.error('Eroare la salvarea coșului');\n    }\n  }, [cartItems]);\n  \n  // Format price for display\n  const formatPrice = useCallback((price) => {\n    return new Intl.NumberFormat('ro-RO', {\n      style: 'currency',\n      currency: 'RON'\n    }).format(price);\n  }, []);\n  \n  // Add item to cart\n  const addToCart = useCallback((product, quantity = 1) => {\n    if (!product || !product.id) {\n      toast.error('Produs invalid');\n      return;\n    }\n    \n    if (!product.inStock) {\n      toast.error('Produsul nu este în stoc');\n      return;\n    }\n    \n    if (quantity <= 0) {\n      toast.error('Cantitatea trebuie să fie pozitivă');\n      return;\n    }\n    \n    setIsLoading(true);\n    \n    try {\n      setCartItems(prevItems => {\n        const existingItem = prevItems.find(item => item.id === product.id);\n        \n        if (existingItem) {\n          const newQuantity = existingItem.quantity + quantity;\n          toast.success(`${product.name} - cantitate actualizată la ${newQuantity}`);\n          \n          return prevItems.map(item =>\n            item.id === product.id\n              ? { ...item, quantity: newQuantity }\n              : item\n          );\n        } else {\n          toast.success(`${product.name} adăugat în coș`);\n          \n          return [...prevItems, { \n            ...product, \n            quantity,\n            addedAt: new Date().toISOString()\n          }];\n        }\n      });\n    } catch (error) {\n      console.error('Error adding to cart:', error);\n      toast.error('Eroare la adăugarea în coș');\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n  \n  // Remove item from cart\n  const removeFromCart = useCallback((productId) => {\n    if (!productId) return;\n    \n    setCartItems(prevItems => {\n      const item = prevItems.find(item => item.id === productId);\n      if (item) {\n        toast.success(`${item.name} eliminat din coș`);\n      }\n      return prevItems.filter(item => item.id !== productId);\n    });\n  }, []);\n  \n  // Update item quantity\n  const updateQuantity = useCallback((productId, quantity) => {\n    if (!productId) return;\n    \n    if (quantity <= 0) {\n      removeFromCart(productId);\n      return;\n    }\n    \n    setCartItems(prevItems => {\n      const item = prevItems.find(item => item.id === productId);\n      if (item) {\n        toast.success(`${item.name} - cantitate actualizată`);\n      }\n      \n      return prevItems.map(item =>\n        item.id === productId\n          ? { ...item, quantity: parseInt(quantity) }\n          : item\n      );\n    });\n  }, [removeFromCart]);\n  \n  // Increment item quantity\n  const incrementQuantity = useCallback((productId) => {\n    setCartItems(prevItems =>\n      prevItems.map(item =>\n        item.id === productId\n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      )\n    );\n  }, []);\n  \n  // Decrement item quantity\n  const decrementQuantity = useCallback((productId) => {\n    setCartItems(prevItems =>\n      prevItems.map(item => {\n        if (item.id === productId) {\n          const newQuantity = item.quantity - 1;\n          return newQuantity > 0 ? { ...item, quantity: newQuantity } : null;\n        }\n        return item;\n      }).filter(Boolean)\n    );\n  }, []);\n  \n  // Clear entire cart\n  const clearCart = useCallback(() => {\n    setCartItems([]);\n    toast.success('Coșul a fost golit');\n  }, []);\n  \n  // Get cart item by product ID\n  const getCartItem = useCallback((productId) => {\n    return cartItems.find(item => item.id === productId);\n  }, [cartItems]);\n  \n  // Check if product is in cart\n  const isInCart = useCallback((productId) => {\n    return cartItems.some(item => item.id === productId);\n  }, [cartItems]);\n  \n  // Get cart summary for checkout\n  const getCartSummary = useCallback(() => {\n    return {\n      items: cartItems,\n      itemCount: cartItemCount,\n      subtotal: cartSubtotal,\n      tax: cartTax,\n      total: cartTotal,\n      cartId: cartId,\n      formattedSubtotal: formatPrice(cartSubtotal),\n      formattedTax: formatPrice(cartTax),\n      formattedTotal: formatPrice(cartTotal)\n    };\n  }, [cartItems, cartItemCount, cartSubtotal, cartTax, cartTotal, cartId, formatPrice]);\n  \n  // Validate cart items (check stock, prices, etc.)\n  const validateCart = useCallback(async () => {\n    // This would typically make an API call to validate items\n    // For now, we'll do basic validation\n    const invalidItems = cartItems.filter(item => \n      !item.id || !item.name || !item.price || item.quantity <= 0\n    );\n    \n    if (invalidItems.length > 0) {\n      console.warn('Invalid cart items found:', invalidItems);\n      // Remove invalid items\n      setCartItems(prevItems => \n        prevItems.filter(item => \n          item.id && item.name && item.price && item.quantity > 0\n        )\n      );\n      toast.error('Unele produse din coș au fost eliminate (produse invalide)');\n    }\n    \n    return invalidItems.length === 0;\n  }, [cartItems]);\n  \n  return {\n    // State\n    cartItems,\n    cartItemCount,\n    cartTotal,\n    cartSubtotal,\n    cartTax,\n    isLoading,\n    cartId,\n    \n    // Actions\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    incrementQuantity,\n    decrementQuantity,\n    clearCart,\n    \n    // Utilities\n    getCartItem,\n    isInCart,\n    getCartSummary,\n    validateCart,\n    formatPrice\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}