{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import Loading from'../common/Loading';import ErrorMessage from'../common/ErrorMessage';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SMSVerification=_ref=>{let{phoneNumber,onVerificationSuccess,onBack,loading=false,className=''}=_ref;const[verificationCode,setVerificationCode]=useState(['','','','','','']);const[isVerifying,setIsVerifying]=useState(false);const[error,setError]=useState('');const[resendCooldown,setResendCooldown]=useState(0);const[isResending,setIsResending]=useState(false);const inputRefs=useRef([]);// Initialize cooldown timer on component mount\nuseEffect(()=>{setResendCooldown(60);// 60 seconds initial cooldown\n},[]);// Countdown timer for resend button\nuseEffect(()=>{let timer;if(resendCooldown>0){timer=setTimeout(()=>{setResendCooldown(resendCooldown-1);},1000);}return()=>clearTimeout(timer);},[resendCooldown]);// Auto-submit when all 6 digits are entered\nuseEffect(()=>{const code=verificationCode.join('');if(code.length===6&&!isVerifying){handleVerifyCode(code);}},[verificationCode,isVerifying]);// Format phone number for display (mask middle digits)\nconst formatPhoneForDisplay=phone=>{if(!phone)return'';// Format: 0712 345 678 -> 0712 *** 678\nconst cleaned=phone.replace(/\\D/g,'');if(cleaned.length===10){return\"\".concat(cleaned.slice(0,4),\" *** \").concat(cleaned.slice(-3));}return phone;};// Handle input change for verification code\nconst handleCodeChange=(index,value)=>{// Only allow digits\nif(!/^\\d*$/.test(value))return;const newCode=[...verificationCode];newCode[index]=value.slice(-1);// Take only the last digit\nsetVerificationCode(newCode);// Clear error when user starts typing\nif(error)setError('');// Auto-focus next input\nif(value&&index<5){var _inputRefs$current;(_inputRefs$current=inputRefs.current[index+1])===null||_inputRefs$current===void 0?void 0:_inputRefs$current.focus();}};// Handle backspace and navigation\nconst handleKeyDown=(index,e)=>{if(e.key==='Backspace'){if(!verificationCode[index]&&index>0){var _inputRefs$current2;// If current field is empty, focus previous field\n(_inputRefs$current2=inputRefs.current[index-1])===null||_inputRefs$current2===void 0?void 0:_inputRefs$current2.focus();}else{// Clear current field\nconst newCode=[...verificationCode];newCode[index]='';setVerificationCode(newCode);}}else if(e.key==='ArrowLeft'&&index>0){var _inputRefs$current3;(_inputRefs$current3=inputRefs.current[index-1])===null||_inputRefs$current3===void 0?void 0:_inputRefs$current3.focus();}else if(e.key==='ArrowRight'&&index<5){var _inputRefs$current4;(_inputRefs$current4=inputRefs.current[index+1])===null||_inputRefs$current4===void 0?void 0:_inputRefs$current4.focus();}};// Handle paste event\nconst handlePaste=e=>{e.preventDefault();const pastedData=e.clipboardData.getData('text').replace(/\\D/g,'');if(pastedData.length===6){var _inputRefs$current$;const newCode=pastedData.split('');setVerificationCode(newCode);// Focus last input\n(_inputRefs$current$=inputRefs.current[5])===null||_inputRefs$current$===void 0?void 0:_inputRefs$current$.focus();}};// Mock API call for code verification\nconst handleVerifyCode=async code=>{setIsVerifying(true);setError('');try{// Simulate API call\nawait new Promise(resolve=>setTimeout(resolve,1500));// Mock verification logic (in real app, this would be an API call)\nif(code==='123456'){// Success\nonVerificationSuccess({phoneNumber,verificationCode:code,verifiedAt:new Date().toISOString()});}else{var _inputRefs$current$2;// Failure\nsetError('Codul introdus este incorect. Verificați și încercați din nou.');// Clear the code\nsetVerificationCode(['','','','','','']);(_inputRefs$current$2=inputRefs.current[0])===null||_inputRefs$current$2===void 0?void 0:_inputRefs$current$2.focus();}}catch(err){var _inputRefs$current$3;setError('A apărut o eroare la verificarea codului. Încercați din nou.');setVerificationCode(['','','','','','']);(_inputRefs$current$3=inputRefs.current[0])===null||_inputRefs$current$3===void 0?void 0:_inputRefs$current$3.focus();}finally{setIsVerifying(false);}};// Handle resend code\nconst handleResendCode=async()=>{setIsResending(true);setError('');try{// Simulate API call\nawait new Promise(resolve=>setTimeout(resolve,1000));// Reset cooldown\nsetResendCooldown(60);// Show success message\nsetError('');// Clear any existing errors\n// In real app, this would trigger SMS sending\nconsole.log('SMS code resent to:',phoneNumber);}catch(err){setError('Nu am putut retrimite codul. Încercați din nou.');}finally{setIsResending(false);}};// Handle manual verification (when user clicks verify button)\nconst handleManualVerify=()=>{const code=verificationCode.join('');if(code.length===6){handleVerifyCode(code);}else{setError('Introduceți toate cele 6 cifre ale codului.');}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center py-12\",children:/*#__PURE__*/_jsx(Loading,{})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-sm p-6 \".concat(className),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mb-8\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold text-gray-900 mb-4\",children:\"Verificare num\\u0103r de telefon\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-gray-600 space-y-2\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Am trimis un cod de verificare prin SMS la num\\u0103rul:\"}),/*#__PURE__*/_jsx(\"p\",{className:\"font-medium text-lg text-gray-900\",children:formatPhoneForDisplay(phoneNumber)}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm\",children:\"Introduce\\u021Bi codul de 6 cifre primit prin SMS\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center space-x-3 mb-4\",children:verificationCode.map((digit,index)=>/*#__PURE__*/_jsx(\"input\",{ref:el=>inputRefs.current[index]=el,type:\"text\",inputMode:\"numeric\",maxLength:\"1\",value:digit,onChange:e=>handleCodeChange(index,e.target.value),onKeyDown:e=>handleKeyDown(index,e),onPaste:handlePaste,className:\"w-12 h-12 text-center text-xl font-bold border-2 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent \".concat(error?'border-red-500':'border-gray-300',\" \").concat(isVerifying?'bg-gray-100':'bg-white'),disabled:isVerifying,autoComplete:\"one-time-code\"},index))}),error&&/*#__PURE__*/_jsx(ErrorMessage,{message:error,className:\"text-center\"})]}),verificationCode.join('').length===6&&!isVerifying&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-6\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleManualVerify,className:\"w-full bg-green-600 text-white py-3 px-6 rounded-lg font-semibold hover:bg-green-700 transition-colors\",children:\"Verific\\u0103 codul\"})}),isVerifying&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-6 text-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"inline-flex items-center text-gray-600\",children:[/*#__PURE__*/_jsxs(\"svg\",{className:\"animate-spin -ml-1 mr-3 h-5 w-5 text-green-600\",xmlns:\"http://www.w3.org/2000/svg\",fill:\"none\",viewBox:\"0 0 24 24\",children:[/*#__PURE__*/_jsx(\"circle\",{className:\"opacity-25\",cx:\"12\",cy:\"12\",r:\"10\",stroke:\"currentColor\",strokeWidth:\"4\"}),/*#__PURE__*/_jsx(\"path\",{className:\"opacity-75\",fill:\"currentColor\",d:\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"})]}),\"Se verific\\u0103 codul...\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"border-t border-gray-200 pt-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center space-y-4\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:\"Nu a\\u021Bi primit codul?\"}),resendCooldown>0?/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500\",children:[\"Pute\\u021Bi cere un nou cod \\xEEn \",resendCooldown,\" secunde\"]}):/*#__PURE__*/_jsx(\"button\",{onClick:handleResendCode,disabled:isResending,className:\"text-green-600 hover:text-green-700 font-medium disabled:text-gray-400 disabled:cursor-not-allowed\",children:isResending?/*#__PURE__*/_jsxs(\"span\",{className:\"inline-flex items-center\",children:[/*#__PURE__*/_jsxs(\"svg\",{className:\"animate-spin -ml-1 mr-2 h-4 w-4\",xmlns:\"http://www.w3.org/2000/svg\",fill:\"none\",viewBox:\"0 0 24 24\",children:[/*#__PURE__*/_jsx(\"circle\",{className:\"opacity-25\",cx:\"12\",cy:\"12\",r:\"10\",stroke:\"currentColor\",strokeWidth:\"4\"}),/*#__PURE__*/_jsx(\"path\",{className:\"opacity-75\",fill:\"currentColor\",d:\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"})]}),\"Se retrimite...\"]}):'Retrimite codul'})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"border-t border-gray-200 pt-6 mt-6\",children:/*#__PURE__*/_jsx(\"button\",{onClick:onBack,disabled:isVerifying||isResending,className:\"w-full text-gray-600 hover:text-gray-800 font-medium py-2 disabled:text-gray-400 disabled:cursor-not-allowed transition-colors\",children:\"\\u2190 \\xCEnapoi la informa\\u021Bii de livrare\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 bg-blue-50 border border-blue-200 rounded-lg p-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-sm font-medium text-blue-800 mb-2\",children:\"\\uD83D\\uDCA1 Ave\\u021Bi probleme cu verificarea?\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-blue-700 space-y-1\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 Verifica\\u021Bi c\\u0103 a\\u021Bi introdus num\\u0103rul de telefon corect\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 SMS-ul poate \\xEEnt\\xE2rzia c\\xE2teva minute\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 Verifica\\u021Bi folderul de spam sau mesajele blocate\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 Pentru ajutor contacta\\u021Bi: 0700 123 456\"})]})]}),process.env.NODE_ENV==='development'&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 p-3 bg-yellow-50 border border-yellow-200 rounded-lg\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-yellow-800\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Dezvoltare:\"}),\" Folosi\\u021Bi codul \",/*#__PURE__*/_jsx(\"code\",{children:\"123456\"}),\" pentru testare\"]})})]});};export default SMSVerification;","map":{"version":3,"names":["React","useState","useEffect","useRef","Loading","ErrorMessage","jsx","_jsx","jsxs","_jsxs","SMSVerification","_ref","phoneNumber","onVerificationSuccess","onBack","loading","className","verificationCode","setVerificationCode","isVerifying","setIsVerifying","error","setError","resendCooldown","setResendCooldown","isResending","setIsResending","inputRefs","timer","setTimeout","clearTimeout","code","join","length","handleVerifyCode","formatPhoneForDisplay","phone","cleaned","replace","concat","slice","handleCodeChange","index","value","test","newCode","_inputRefs$current","current","focus","handleKeyDown","e","key","_inputRefs$current2","_inputRefs$current3","_inputRefs$current4","handlePaste","preventDefault","pastedData","clipboardData","getData","_inputRefs$current$","split","Promise","resolve","verifiedAt","Date","toISOString","_inputRefs$current$2","err","_inputRefs$current$3","handleResendCode","console","log","handleManualVerify","children","map","digit","ref","el","type","inputMode","maxLength","onChange","target","onKeyDown","onPaste","disabled","autoComplete","message","onClick","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","process","env","NODE_ENV"],"sources":["/Users/claudiu/Desktop/pe foc de lemne/frontend/src/components/checkout/SMSVerification.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Loading from '../common/Loading';\nimport ErrorMessage from '../common/ErrorMessage';\n\nconst SMSVerification = ({ \n  phoneNumber, \n  onVerificationSuccess, \n  onBack,\n  loading = false,\n  className = ''\n}) => {\n  const [verificationCode, setVerificationCode] = useState(['', '', '', '', '', '']);\n  const [isVerifying, setIsVerifying] = useState(false);\n  const [error, setError] = useState('');\n  const [resendCooldown, setResendCooldown] = useState(0);\n  const [isResending, setIsResending] = useState(false);\n  const inputRefs = useRef([]);\n\n  // Initialize cooldown timer on component mount\n  useEffect(() => {\n    setResendCooldown(60); // 60 seconds initial cooldown\n  }, []);\n\n  // Countdown timer for resend button\n  useEffect(() => {\n    let timer;\n    if (resendCooldown > 0) {\n      timer = setTimeout(() => {\n        setResendCooldown(resendCooldown - 1);\n      }, 1000);\n    }\n    return () => clearTimeout(timer);\n  }, [resendCooldown]);\n\n  // Auto-submit when all 6 digits are entered\n  useEffect(() => {\n    const code = verificationCode.join('');\n    if (code.length === 6 && !isVerifying) {\n      handleVerifyCode(code);\n    }\n  }, [verificationCode, isVerifying]);\n\n  // Format phone number for display (mask middle digits)\n  const formatPhoneForDisplay = (phone) => {\n    if (!phone) return '';\n    // Format: 0712 345 678 -> 0712 *** 678\n    const cleaned = phone.replace(/\\D/g, '');\n    if (cleaned.length === 10) {\n      return `${cleaned.slice(0, 4)} *** ${cleaned.slice(-3)}`;\n    }\n    return phone;\n  };\n\n  // Handle input change for verification code\n  const handleCodeChange = (index, value) => {\n    // Only allow digits\n    if (!/^\\d*$/.test(value)) return;\n\n    const newCode = [...verificationCode];\n    newCode[index] = value.slice(-1); // Take only the last digit\n    setVerificationCode(newCode);\n\n    // Clear error when user starts typing\n    if (error) setError('');\n\n    // Auto-focus next input\n    if (value && index < 5) {\n      inputRefs.current[index + 1]?.focus();\n    }\n  };\n\n  // Handle backspace and navigation\n  const handleKeyDown = (index, e) => {\n    if (e.key === 'Backspace') {\n      if (!verificationCode[index] && index > 0) {\n        // If current field is empty, focus previous field\n        inputRefs.current[index - 1]?.focus();\n      } else {\n        // Clear current field\n        const newCode = [...verificationCode];\n        newCode[index] = '';\n        setVerificationCode(newCode);\n      }\n    } else if (e.key === 'ArrowLeft' && index > 0) {\n      inputRefs.current[index - 1]?.focus();\n    } else if (e.key === 'ArrowRight' && index < 5) {\n      inputRefs.current[index + 1]?.focus();\n    }\n  };\n\n  // Handle paste event\n  const handlePaste = (e) => {\n    e.preventDefault();\n    const pastedData = e.clipboardData.getData('text').replace(/\\D/g, '');\n    \n    if (pastedData.length === 6) {\n      const newCode = pastedData.split('');\n      setVerificationCode(newCode);\n      // Focus last input\n      inputRefs.current[5]?.focus();\n    }\n  };\n\n  // Mock API call for code verification\n  const handleVerifyCode = async (code) => {\n    setIsVerifying(true);\n    setError('');\n\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      \n      // Mock verification logic (in real app, this would be an API call)\n      if (code === '123456') {\n        // Success\n        onVerificationSuccess({\n          phoneNumber,\n          verificationCode: code,\n          verifiedAt: new Date().toISOString()\n        });\n      } else {\n        // Failure\n        setError('Codul introdus este incorect. Verificați și încercați din nou.');\n        // Clear the code\n        setVerificationCode(['', '', '', '', '', '']);\n        inputRefs.current[0]?.focus();\n      }\n    } catch (err) {\n      setError('A apărut o eroare la verificarea codului. Încercați din nou.');\n      setVerificationCode(['', '', '', '', '', '']);\n      inputRefs.current[0]?.focus();\n    } finally {\n      setIsVerifying(false);\n    }\n  };\n\n  // Handle resend code\n  const handleResendCode = async () => {\n    setIsResending(true);\n    setError('');\n\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Reset cooldown\n      setResendCooldown(60);\n      \n      // Show success message\n      setError(''); // Clear any existing errors\n      \n      // In real app, this would trigger SMS sending\n      console.log('SMS code resent to:', phoneNumber);\n      \n    } catch (err) {\n      setError('Nu am putut retrimite codul. Încercați din nou.');\n    } finally {\n      setIsResending(false);\n    }\n  };\n\n  // Handle manual verification (when user clicks verify button)\n  const handleManualVerify = () => {\n    const code = verificationCode.join('');\n    if (code.length === 6) {\n      handleVerifyCode(code);\n    } else {\n      setError('Introduceți toate cele 6 cifre ale codului.');\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center py-12\">\n        <Loading />\n      </div>\n    );\n  }\n\n  return (\n    <div className={`bg-white rounded-lg shadow-sm p-6 ${className}`}>\n      <div className=\"text-center mb-8\">\n        <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">\n          Verificare număr de telefon\n        </h2>\n        <div className=\"text-gray-600 space-y-2\">\n          <p>\n            Am trimis un cod de verificare prin SMS la numărul:\n          </p>\n          <p className=\"font-medium text-lg text-gray-900\">\n            {formatPhoneForDisplay(phoneNumber)}\n          </p>\n          <p className=\"text-sm\">\n            Introduceți codul de 6 cifre primit prin SMS\n          </p>\n        </div>\n      </div>\n\n      {/* Verification Code Input */}\n      <div className=\"mb-6\">\n        <div className=\"flex justify-center space-x-3 mb-4\">\n          {verificationCode.map((digit, index) => (\n            <input\n              key={index}\n              ref={el => inputRefs.current[index] = el}\n              type=\"text\"\n              inputMode=\"numeric\"\n              maxLength=\"1\"\n              value={digit}\n              onChange={(e) => handleCodeChange(index, e.target.value)}\n              onKeyDown={(e) => handleKeyDown(index, e)}\n              onPaste={handlePaste}\n              className={`w-12 h-12 text-center text-xl font-bold border-2 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent ${\n                error ? 'border-red-500' : 'border-gray-300'\n              } ${isVerifying ? 'bg-gray-100' : 'bg-white'}`}\n              disabled={isVerifying}\n              autoComplete=\"one-time-code\"\n            />\n          ))}\n        </div>\n\n        {/* Error Message */}\n        {error && (\n          <ErrorMessage message={error} className=\"text-center\" />\n        )}\n      </div>\n\n      {/* Manual Verify Button (for cases where auto-verify fails) */}\n      {verificationCode.join('').length === 6 && !isVerifying && (\n        <div className=\"mb-6\">\n          <button\n            onClick={handleManualVerify}\n            className=\"w-full bg-green-600 text-white py-3 px-6 rounded-lg font-semibold hover:bg-green-700 transition-colors\"\n          >\n            Verifică codul\n          </button>\n        </div>\n      )}\n\n      {/* Loading State */}\n      {isVerifying && (\n        <div className=\"mb-6 text-center\">\n          <div className=\"inline-flex items-center text-gray-600\">\n            <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-green-600\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n              <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n              <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n            </svg>\n            Se verifică codul...\n          </div>\n        </div>\n      )}\n\n      {/* Resend Section */}\n      <div className=\"border-t border-gray-200 pt-6\">\n        <div className=\"text-center space-y-4\">\n          <p className=\"text-sm text-gray-600\">\n            Nu ați primit codul?\n          </p>\n          \n          {resendCooldown > 0 ? (\n            <p className=\"text-sm text-gray-500\">\n              Puteți cere un nou cod în {resendCooldown} secunde\n            </p>\n          ) : (\n            <button\n              onClick={handleResendCode}\n              disabled={isResending}\n              className=\"text-green-600 hover:text-green-700 font-medium disabled:text-gray-400 disabled:cursor-not-allowed\"\n            >\n              {isResending ? (\n                <span className=\"inline-flex items-center\">\n                  <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                  Se retrimite...\n                </span>\n              ) : (\n                'Retrimite codul'\n              )}\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* Back Button */}\n      <div className=\"border-t border-gray-200 pt-6 mt-6\">\n        <button\n          onClick={onBack}\n          disabled={isVerifying || isResending}\n          className=\"w-full text-gray-600 hover:text-gray-800 font-medium py-2 disabled:text-gray-400 disabled:cursor-not-allowed transition-colors\"\n        >\n          ← Înapoi la informații de livrare\n        </button>\n      </div>\n\n      {/* Help Section */}\n      <div className=\"mt-6 bg-blue-50 border border-blue-200 rounded-lg p-4\">\n        <h4 className=\"text-sm font-medium text-blue-800 mb-2\">\n          💡 Aveți probleme cu verificarea?\n        </h4>\n        <div className=\"text-sm text-blue-700 space-y-1\">\n          <p>• Verificați că ați introdus numărul de telefon corect</p>\n          <p>• SMS-ul poate întârzia câteva minute</p>\n          <p>• Verificați folderul de spam sau mesajele blocate</p>\n          <p>• Pentru ajutor contactați: 0700 123 456</p>\n        </div>\n      </div>\n\n      {/* Development Helper */}\n      {process.env.NODE_ENV === 'development' && (\n        <div className=\"mt-4 p-3 bg-yellow-50 border border-yellow-200 rounded-lg\">\n          <p className=\"text-xs text-yellow-800\">\n            <strong>Dezvoltare:</strong> Folosiți codul <code>123456</code> pentru testare\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SMSVerification;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}