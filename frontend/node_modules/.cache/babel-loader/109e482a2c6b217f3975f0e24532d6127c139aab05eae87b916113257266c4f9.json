{"ast":null,"code":"import api from './api';\nclass ApiService {\n  // Health check endpoint\n  async healthCheck() {\n    try {\n      const response = await api.get('/health');\n      return {\n        success: true,\n        data: response.data,\n        status: response.status\n      };\n    } catch (error) {\n      var _error$response;\n      return {\n        success: false,\n        error: error.message,\n        status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status\n      };\n    }\n  }\n\n  // Generic GET request\n  async get(endpoint, params = {}) {\n    try {\n      const response = await api.get(endpoint, {\n        params\n      });\n      return {\n        success: true,\n        data: response.data,\n        status: response.status\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data, _error$response3;\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message,\n        status: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status\n      };\n    }\n  }\n\n  // Generic POST request\n  async post(endpoint, data = {}) {\n    try {\n      const response = await api.post(endpoint, data);\n      return {\n        success: true,\n        data: response.data,\n        status: response.status\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data, _error$response5;\n      return {\n        success: false,\n        error: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || error.message,\n        status: (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status\n      };\n    }\n  }\n\n  // Generic PUT request\n  async put(endpoint, data = {}) {\n    try {\n      const response = await api.put(endpoint, data);\n      return {\n        success: true,\n        data: response.data,\n        status: response.status\n      };\n    } catch (error) {\n      var _error$response6, _error$response6$data, _error$response7;\n      return {\n        success: false,\n        error: ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || error.message,\n        status: (_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.status\n      };\n    }\n  }\n\n  // Generic DELETE request\n  async delete(endpoint) {\n    try {\n      const response = await api.delete(endpoint);\n      return {\n        success: true,\n        data: response.data,\n        status: response.status\n      };\n    } catch (error) {\n      var _error$response8, _error$response8$data, _error$response9;\n      return {\n        success: false,\n        error: ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || error.message,\n        status: (_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.status\n      };\n    }\n  }\n}\nexport default new ApiService();","map":{"version":3,"names":["api","ApiService","healthCheck","response","get","success","data","status","error","_error$response","message","endpoint","params","_error$response2","_error$response2$data","_error$response3","post","_error$response4","_error$response4$data","_error$response5","put","_error$response6","_error$response6$data","_error$response7","delete","_error$response8","_error$response8$data","_error$response9"],"sources":["/Users/claudiu/Desktop/pe foc de lemne/frontend/src/services/apiService.js"],"sourcesContent":["import api from './api';\n\nclass ApiService {\n  // Health check endpoint\n  async healthCheck() {\n    try {\n      const response = await api.get('/health');\n      return {\n        success: true,\n        data: response.data,\n        status: response.status\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message,\n        status: error.response?.status\n      };\n    }\n  }\n  \n  // Generic GET request\n  async get(endpoint, params = {}) {\n    try {\n      const response = await api.get(endpoint, { params });\n      return {\n        success: true,\n        data: response.data,\n        status: response.status\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.response?.data?.message || error.message,\n        status: error.response?.status\n      };\n    }\n  }\n  \n  // Generic POST request\n  async post(endpoint, data = {}) {\n    try {\n      const response = await api.post(endpoint, data);\n      return {\n        success: true,\n        data: response.data,\n        status: response.status\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.response?.data?.message || error.message,\n        status: error.response?.status\n      };\n    }\n  }\n  \n  // Generic PUT request\n  async put(endpoint, data = {}) {\n    try {\n      const response = await api.put(endpoint, data);\n      return {\n        success: true,\n        data: response.data,\n        status: response.status\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.response?.data?.message || error.message,\n        status: error.response?.status\n      };\n    }\n  }\n  \n  // Generic DELETE request\n  async delete(endpoint) {\n    try {\n      const response = await api.delete(endpoint);\n      return {\n        success: true,\n        data: response.data,\n        status: response.status\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.response?.data?.message || error.message,\n        status: error.response?.status\n      };\n    }\n  }\n}\n\nexport default new ApiService();"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,MAAMC,UAAU,CAAC;EACf;EACA,MAAMC,WAAWA,CAAA,EAAG;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,SAAS,CAAC;MACzC,OAAO;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAEH,QAAQ,CAACG,IAAI;QACnBC,MAAM,EAAEJ,QAAQ,CAACI;MACnB,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA;MACd,OAAO;QACLJ,OAAO,EAAE,KAAK;QACdG,KAAK,EAAEA,KAAK,CAACE,OAAO;QACpBH,MAAM,GAAAE,eAAA,GAAED,KAAK,CAACL,QAAQ,cAAAM,eAAA,uBAAdA,eAAA,CAAgBF;MAC1B,CAAC;IACH;EACF;;EAEA;EACA,MAAMH,GAAGA,CAACO,QAAQ,EAAEC,MAAM,GAAG,CAAC,CAAC,EAAE;IAC/B,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAACO,QAAQ,EAAE;QAAEC;MAAO,CAAC,CAAC;MACpD,OAAO;QACLP,OAAO,EAAE,IAAI;QACbC,IAAI,EAAEH,QAAQ,CAACG,IAAI;QACnBC,MAAM,EAAEJ,QAAQ,CAACI;MACnB,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAK,gBAAA,EAAAC,qBAAA,EAAAC,gBAAA;MACd,OAAO;QACLV,OAAO,EAAE,KAAK;QACdG,KAAK,EAAE,EAAAK,gBAAA,GAAAL,KAAK,CAACL,QAAQ,cAAAU,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBP,IAAI,cAAAQ,qBAAA,uBAApBA,qBAAA,CAAsBJ,OAAO,KAAIF,KAAK,CAACE,OAAO;QACrDH,MAAM,GAAAQ,gBAAA,GAAEP,KAAK,CAACL,QAAQ,cAAAY,gBAAA,uBAAdA,gBAAA,CAAgBR;MAC1B,CAAC;IACH;EACF;;EAEA;EACA,MAAMS,IAAIA,CAACL,QAAQ,EAAEL,IAAI,GAAG,CAAC,CAAC,EAAE;IAC9B,IAAI;MACF,MAAMH,QAAQ,GAAG,MAAMH,GAAG,CAACgB,IAAI,CAACL,QAAQ,EAAEL,IAAI,CAAC;MAC/C,OAAO;QACLD,OAAO,EAAE,IAAI;QACbC,IAAI,EAAEH,QAAQ,CAACG,IAAI;QACnBC,MAAM,EAAEJ,QAAQ,CAACI;MACnB,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAS,gBAAA,EAAAC,qBAAA,EAAAC,gBAAA;MACd,OAAO;QACLd,OAAO,EAAE,KAAK;QACdG,KAAK,EAAE,EAAAS,gBAAA,GAAAT,KAAK,CAACL,QAAQ,cAAAc,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBX,IAAI,cAAAY,qBAAA,uBAApBA,qBAAA,CAAsBR,OAAO,KAAIF,KAAK,CAACE,OAAO;QACrDH,MAAM,GAAAY,gBAAA,GAAEX,KAAK,CAACL,QAAQ,cAAAgB,gBAAA,uBAAdA,gBAAA,CAAgBZ;MAC1B,CAAC;IACH;EACF;;EAEA;EACA,MAAMa,GAAGA,CAACT,QAAQ,EAAEL,IAAI,GAAG,CAAC,CAAC,EAAE;IAC7B,IAAI;MACF,MAAMH,QAAQ,GAAG,MAAMH,GAAG,CAACoB,GAAG,CAACT,QAAQ,EAAEL,IAAI,CAAC;MAC9C,OAAO;QACLD,OAAO,EAAE,IAAI;QACbC,IAAI,EAAEH,QAAQ,CAACG,IAAI;QACnBC,MAAM,EAAEJ,QAAQ,CAACI;MACnB,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAa,gBAAA,EAAAC,qBAAA,EAAAC,gBAAA;MACd,OAAO;QACLlB,OAAO,EAAE,KAAK;QACdG,KAAK,EAAE,EAAAa,gBAAA,GAAAb,KAAK,CAACL,QAAQ,cAAAkB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBf,IAAI,cAAAgB,qBAAA,uBAApBA,qBAAA,CAAsBZ,OAAO,KAAIF,KAAK,CAACE,OAAO;QACrDH,MAAM,GAAAgB,gBAAA,GAAEf,KAAK,CAACL,QAAQ,cAAAoB,gBAAA,uBAAdA,gBAAA,CAAgBhB;MAC1B,CAAC;IACH;EACF;;EAEA;EACA,MAAMiB,MAAMA,CAACb,QAAQ,EAAE;IACrB,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMH,GAAG,CAACwB,MAAM,CAACb,QAAQ,CAAC;MAC3C,OAAO;QACLN,OAAO,EAAE,IAAI;QACbC,IAAI,EAAEH,QAAQ,CAACG,IAAI;QACnBC,MAAM,EAAEJ,QAAQ,CAACI;MACnB,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAiB,gBAAA,EAAAC,qBAAA,EAAAC,gBAAA;MACd,OAAO;QACLtB,OAAO,EAAE,KAAK;QACdG,KAAK,EAAE,EAAAiB,gBAAA,GAAAjB,KAAK,CAACL,QAAQ,cAAAsB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBnB,IAAI,cAAAoB,qBAAA,uBAApBA,qBAAA,CAAsBhB,OAAO,KAAIF,KAAK,CAACE,OAAO;QACrDH,MAAM,GAAAoB,gBAAA,GAAEnB,KAAK,CAACL,QAAQ,cAAAwB,gBAAA,uBAAdA,gBAAA,CAAgBpB;MAC1B,CAAC;IACH;EACF;AACF;AAEA,eAAe,IAAIN,UAAU,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}